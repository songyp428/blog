{"remainingRequest":"/Users/yanping/Documents/songyp/blog/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/yanping/Documents/songyp/blog/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/yanping/Documents/songyp/blog/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/yanping/Documents/songyp/blog/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/yanping/Documents/songyp/blog/docs/fe/css/图片移入移除效果实现.md?vue&type=template&id=0da65580&","dependencies":[{"path":"/Users/yanping/Documents/songyp/blog/docs/fe/css/图片移入移除效果实现.md","mtime":1584459595000},{"path":"/Users/yanping/Documents/songyp/blog/node_modules/cache-loader/dist/cjs.js","mtime":1560934370000},{"path":"/Users/yanping/Documents/songyp/blog/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1560934372000},{"path":"/Users/yanping/Documents/songyp/blog/node_modules/cache-loader/dist/cjs.js","mtime":1560934370000},{"path":"/Users/yanping/Documents/songyp/blog/node_modules/vue-loader/lib/index.js","mtime":1560934372000},{"path":"/Users/yanping/Documents/songyp/blog/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1560934372000}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h3 id=\\\"图片蒙层、移除效果\\\"><a href=\\\"#图片蒙层、移除效果\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 图片蒙层、移除效果</h3> <p>想要的效果</p> <ul><li>鼠标移入图片中，图片上出现蒙层，蒙层上展示删除的图标logo</li> <li>点击删除logo，图片向上淡出</li></ul> <h4 id=\\\"实现图片蒙层\\\"><a href=\\\"#实现图片蒙层\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 实现图片蒙层</h4> <div class=\\\"language- extra-class\\\"><pre class=\\\"language-text\\\"><code>// 样式部分\\n.img-container {\\n  position: relative;   // 父元素position设置为relative\\n  margin-right: 4px;\\n  width: 100px;\\n  height: 100px;\\n  border: 1px solid #c0ccda;\\n  border-radius: 6px;\\n  overflow: hidden;\\n}\\n\\n.img-title {\\n  text-align: center;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  font-size: 12px;\\n}\\n\\n.img-hover-container {\\n  position: absolute;     // 蒙层元素position设置为absolute\\n  width: 100%;\\n  height: 100px;\\n  left: 0;\\n  top: 0;\\n  display: inline-flex;\\n  justify-content: center;\\n  align-items: center;\\n  color: #fff;\\n  opacity: 0;             // 蒙层元素透明度为0\\n  font-size: 20px;\\n  background-color: rgba(0, 0, 0, 0.5);\\n  cursor: pointer;\\n  transition: opacity 0.3s;\\n}\\n\\n// 鼠标移入父元素，蒙层元素透明度设置为1\\n.img-container:hover .img-hover-container {\\n  opacity: 1;\\n}\\n\\n// dom节点部分\\n&lt;div class=&quot;img-container&quot;&gt;\\n  &lt;img :src=&quot;XXX&quot; alt=&quot;&quot; /&gt;\\n  &lt;span class=&quot;img-hover-container&quot;&gt;\\n    &lt;span&gt;\\n      &lt;i class=&quot;el-icon-delete&quot;&gt;&lt;/i&gt;\\n    &lt;/span&gt;\\n  &lt;/span&gt;\\n&lt;/div&gt;\\n</code></pre></div><p>关键的步骤</p> <ul><li>父元素设置<code>position:relative</code>，蒙层子元素设置<code>position:absolute</code>进行定位</li> <li>利用透明度和hover属性进行效果渲染，蒙层元素初设置为<code>opacity: 0</code>(透明)，鼠标移入父元素(关键是父元素，不是父元素下的图片元素)，蒙层元素的透明度设置为<code>opacity: 1</code>(不透明)，如果觉得效果僵硬，那就加些动画效果就好。</li></ul> <h4 id=\\\"删除图片向上淡出效果\\\"><a href=\\\"#删除图片向上淡出效果\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 删除图片向上淡出效果</h4> <div class=\\\"language- extra-class\\\"><pre class=\\\"language-text\\\"><code>// 样式部分\\n@keyframes entermove {\\n  0% {\\n    opacity: 0;\\n    transform: translateY(-20px);\\n  }\\n  100% {\\n    opacity: 1;\\n    transform: translateY(0px);\\n  }\\n}\\n\\n@-webkit-keyframes entermove /*Safari and Chrome*/ {\\n  0% {\\n    opacity: 0;\\n    transform: translateY(-20px);\\n  }\\n  100% {\\n    opacity: 1;\\n    transform: translateY(0px);\\n  }\\n}\\n\\n@keyframes outmove {\\n  0% {\\n    opacity: 1;\\n    transform: translateY(0px);\\n  }\\n  100% {\\n    opacity: 0;\\n    transform: translateY(-20px);\\n  }\\n}\\n\\n@-webkit-keyframes outmove /*Safari and Chrome*/ {\\n  0% {\\n    opacity: 1;\\n    transform: translateY(0px);\\n  }\\n  100% {\\n    opacity: 0;\\n    transform: translateY(-20px);\\n  }\\n}\\n// 删除的动画\\n.img-container-out {\\n  animation: outmove ease 1s;\\n  -webkit-animation: outmove ease 1s; /*Safari and Chrome*/\\n}\\n\\n// JS部分 - 删除函数\\nhandleRemoveFile(index) {\\n  this.deleteFlag = true\\n  this.operateMethod = 'remove'\\n  // 为了配合删除动画样式，设置延时删除\\n  setTimeout(() =&gt; {\\n    this.pictureList.splice(index, 1)\\n    this.deleteFlag = false\\n  }, 500)\\n},\\n\\n// DOM部分\\n&lt;div\\n  class=&quot;img-container&quot;\\n  :class=&quot;deleteFlag ? 'img-container-out' : ''&quot;\\n&gt;\\n  &lt;img :src=&quot;XXX&quot; alt=&quot;&quot; /&gt;\\n  &lt;span class=&quot;img-hover-container&quot;&gt;\\n    &lt;span @click=&quot;handleRemoveFile()&quot;&gt;\\n      &lt;i class=&quot;el-icon-delete&quot;&gt;&lt;/i&gt;\\n    &lt;/span&gt;\\n  &lt;/span&gt;\\n&lt;/div&gt;\\n</code></pre></div><p>关键步骤：</p> <ul><li>根据自己需要的删除动画样式，我设置了<code>opacity</code>和<code>translateY</code>两种方式都改变的动画。</li> <li>需要增加一个flag(deleteFlag) ，记录是否处于删除状态。</li> <li>DOM改动是父元素需要根据删除(flag:deleteFlag)增加<code>img-container-out</code>删除样式。</li> <li>删除函数，先把deleteFlag置为true, 这时候删除的父元素绑定了删除动画样式，设置定时器把数据删除，同时把删除的deleteFlag置为false。</li></ul> <p>👇🌰let me see👇</p> \"),_c('demo')],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}