{"remainingRequest":"/Users/mobike/Documents/songyp/github/blog/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/mobike/Documents/songyp/github/blog/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/mobike/Documents/songyp/github/blog/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/mobike/Documents/songyp/github/blog/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/mobike/Documents/songyp/github/blog/docs/fe/js/arrayDeduplication.md?vue&type=template&id=9b17b686&","dependencies":[{"path":"/Users/mobike/Documents/songyp/github/blog/docs/fe/js/arrayDeduplication.md","mtime":1547543088412},{"path":"/Users/mobike/Documents/songyp/github/blog/node_modules/cache-loader/dist/cjs.js","mtime":1540222603192},{"path":"/Users/mobike/Documents/songyp/github/blog/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/mobike/Documents/songyp/github/blog/node_modules/cache-loader/dist/cjs.js","mtime":1540222603192},{"path":"/Users/mobike/Documents/songyp/github/blog/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mobike/Documents/songyp/github/blog/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1533872387000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"content\" }, [\n      _c(\"h3\", { attrs: { id: \"数组去重\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#数组去重\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 数组去重\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h4\", { attrs: { id: \"_1、双重循环\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#_1、双重循环\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 1、双重循环\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"blockquote\", [\n        _c(\"p\", [\n          _vm._v(\"第一层循环是需要去重的 array\"),\n          _c(\"br\"),\n          _vm._v(\n            \"\\n第二层循环是存放没有重复的元素的临时 array (初始化为空数组)\"\n          ),\n          _c(\"br\"),\n          _vm._v(\"\\n重点我理解有两点：\"),\n          _c(\"br\"),\n          _vm._v(\"\\n1、如果存在相等（ 全等哦，=== ）则跳出第二层循环\"),\n          _c(\"br\"),\n          _vm._v(\n            \"\\n2、如果第二层循环 index: j 的值与 tmpArr 的长度 length 相等，则存到tmpArr\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              \"var a = [1,1,2,3,2,'1',true,'1','2',false,true,null,null,undefined,undefined]\\n\\nfunction getUniqueArray(arr){\\n\\tlet j\\n\\tlet tmp_len\\n\\tlet tmpArr = []\\n\\n\\tfor (let i = 0,len_i = arr.length; i < len_i; i++ ) {\\n\\t\\tfor (j = 0,tmp_len = tmpArr.length; j < tmp_len; j++ ) {\\n\\t\\t\\t//注意是 === \\n\\t\\t\\tif (arr[i] === tmpArr[j]) {\\n\\t\\t\\t\\tbreak\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\n\\t\\t//j === tmp_len,则说明没有找到相同值\\n\\t\\tif (j === tmp_len) {\\n\\t\\t\\ttmpArr.push(arr[i])\\n\\t\\t}\\n\\t}\\n\\n\\treturn tmpArr\\n}\\n\\nconsole.log(getUniqueArray(a))  //[1, 2, 3, \\\"1\\\", true, \\\"2\\\", false, null, undefined]\\n\"\n            )\n          ])\n        ])\n      ]),\n      _c(\"h4\", { attrs: { id: \"_2、indexof-方法\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#_2、indexof-方法\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 2、indexOf 方法\")\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}