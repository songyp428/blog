{"remainingRequest":"/Users/mobike/Documents/songyp/github/blog/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/mobike/Documents/songyp/github/blog/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/mobike/Documents/songyp/github/blog/docs/fe/js/arrayDeduplication.md?vue&type=template&id=45d45841&","dependencies":[{"path":"/Users/mobike/Documents/songyp/github/blog/docs/fe/js/arrayDeduplication.md","mtime":1547546636621},{"path":"/Users/mobike/Documents/songyp/github/blog/node_modules/cache-loader/dist/cjs.js","mtime":1540222603192},{"path":"/Users/mobike/Documents/songyp/github/blog/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/mobike/Documents/songyp/github/blog/node_modules/cache-loader/dist/cjs.js","mtime":1540222603192},{"path":"/Users/mobike/Documents/songyp/github/blog/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mobike/Documents/songyp/github/blog/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1533872387000}],"contextDependencies":[],"result":["\n<div class=\"content\"><h3 id=\"数组去重\"><a class=\"header-anchor\" href=\"#数组去重\" aria-hidden=\"true\">#</a> 数组去重</h3>\n<h4 id=\"_1、双重循环\"><a class=\"header-anchor\" href=\"#_1、双重循环\" aria-hidden=\"true\">#</a> 1、双重循环</h4>\n<blockquote>\n<p>第一层循环是需要去重的 array<br>\n第二层循环是存放没有重复的元素的临时 array (初始化为空数组)<br>\n关键点我理解有两点：<br>\n1、如果存在相等（ 全等哦，=== ）则跳出第二层循环<br>\n2、如果第二层循环 index: j 的值与 tmpArr 的长度 length 相等，则存到tmpArr</p>\n</blockquote>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>var a = [1,1,2,3,2,&#39;1&#39;,true,&#39;1&#39;,&#39;2&#39;,false,true,null,null,undefined,undefined]\n\nfunction getUniqueArray(arr){\n\tlet j\n\tlet tmp_len\n\tlet tmpArr = []\n\n\tfor (let i = 0,len_i = arr.length; i &lt; len_i; i++ ) {\n\t\tfor (j = 0,tmp_len = tmpArr.length; j &lt; tmp_len; j++ ) {\n\t\t\t//注意是 === \n\t\t\tif (arr[i] === tmpArr[j]) {\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\n\t\t//j === tmp_len,则说明没有找到相同值\n\t\tif (j === tmp_len) {\n\t\t\ttmpArr.push(arr[i])\n\t\t}\n\t}\n\n\treturn tmpArr\n}\n\nconsole.log(getUniqueArray(a))  //[1, 2, 3, &quot;1&quot;, true, &quot;2&quot;, false, null, undefined]\n</code></pre>\n<!--beforeend--></div><!--afterend--><h4 id=\"_2、indexof-方法\"><a class=\"header-anchor\" href=\"#_2、indexof-方法\" aria-hidden=\"true\">#</a> 2、indexOf 方法</h4>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>var a = [1,1,2,3,2,&#39;1&#39;,true,&#39;1&#39;,&#39;2&#39;,false,true,null,null,undefined,undefined]\n\nfunction getUniqueArray(arr) {\n\tvar tmpArr = []\n\n\tfor (let i = 0,len = arr.length; i &lt; len; i++) {\n\t\t//关键点在这里\n\t\tif (!(tmpArr.indexOf(arr[i]) &gt; -1)) {\n\t\t\ttmpArr.push(arr[i])\n\t\t}\n\t}\n\n\treturn tmpArr\n}\n\nconsole.log(getUniqueArray(a)) //[1, 2, 3, &quot;1&quot;, true, &quot;2&quot;, false, null, undefined]\n</code></pre>\n<!--beforeend--></div><!--afterend--></div>\n",null]}